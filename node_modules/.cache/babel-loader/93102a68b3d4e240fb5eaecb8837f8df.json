{"ast":null,"code":"import { GET_COUNTRIES, GET_COUNTRIES_BY_NAME, GET_COUNTRY_BY_ID, GET_COUNTRIES_NAMES, ORDER_BY_NAME, FILTER_BY_POPULATION, FILTER_BY_CONTINENT, COUNTRIES_BY_ACTIVITIES, GET_ACTIVITIES, POST_ACTIVITIES, removeAccents } from \"../actions/index\";\nconst initialState = {\n  countries: [],\n  countriesNames: [],\n  continentsFilter: [],\n  countryDetails: {},\n  activities: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return { ...state,\n        countries: action.payload,\n        continentsFilter: action.payload\n      };\n\n    case GET_COUNTRIES_BY_NAME:\n      return { ...state,\n        // country: action.payload,\n        countries: action.payload\n      };\n\n    case GET_COUNTRY_BY_ID:\n      return { ...state,\n        countryDetails: action.payload\n      };\n\n    case GET_COUNTRIES_NAMES:\n      const namesOfCountries = action.payload.map(c => removeAccents(c.nameSearch));\n      return { ...state,\n        countriesNames: namesOfCountries\n      };\n\n    case ORDER_BY_NAME:\n      let orderedCountries = action.payload === \"asc\" ? state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: orderedCountries\n      };\n\n    case FILTER_BY_POPULATION:\n      let sortedByPopulation = action.payload === \"less\" ? state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: sortedByPopulation\n      };\n\n    case FILTER_BY_CONTINENT:\n      let countriesList = state.continentsFilter;\n      let filteredByContinent = action.payload === \"all\" ? countriesList : countriesList.filter(c => c.continent === action.payload);\n      return { ...state,\n        countries: filteredByContinent\n      };\n\n    case COUNTRIES_BY_ACTIVITIES:\n      const filteredBycountries = state.countries;\n      const filteredByActivities = state.activities;\n      const actFiltered = action.payload === \"all\" ? filteredBycountries : filteredByActivities.filter(c => c.name === action.payload);\n      const actToRender = action.payload === \"all\" ? filteredBycountries : actFiltered.map(c => c.Countries);\n      const aux = actToRender.flat();\n      console.log(actToRender);\n      return { ...state,\n        countries: aux\n      };\n\n    case GET_ACTIVITIES:\n      return { ...state,\n        activities: action.payload\n      };\n\n    case POST_ACTIVITIES:\n      return { ...state,\n        activities: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["GET_COUNTRIES","GET_COUNTRIES_BY_NAME","GET_COUNTRY_BY_ID","GET_COUNTRIES_NAMES","ORDER_BY_NAME","FILTER_BY_POPULATION","FILTER_BY_CONTINENT","COUNTRIES_BY_ACTIVITIES","GET_ACTIVITIES","POST_ACTIVITIES","removeAccents","initialState","countries","countriesNames","continentsFilter","countryDetails","activities","rootReducer","state","action","type","payload","namesOfCountries","map","c","nameSearch","orderedCountries","sort","a","b","name","sortedByPopulation","population","countriesList","filteredByContinent","filter","continent","filteredBycountries","filteredByActivities","actFiltered","actToRender","Countries","aux","flat","console","log"],"sources":["/home/laus/Documentos/Henry/Henry PT-06/Repo PI Luis Urdaneta/PI-Countries-main/client/src/reducer/index.js"],"sourcesContent":["import {\n  GET_COUNTRIES,\n  GET_COUNTRIES_BY_NAME,\n  GET_COUNTRY_BY_ID,\n  GET_COUNTRIES_NAMES,\n  ORDER_BY_NAME,\n  FILTER_BY_POPULATION,\n  FILTER_BY_CONTINENT,\n  COUNTRIES_BY_ACTIVITIES,\n  GET_ACTIVITIES,\n  POST_ACTIVITIES,\n  removeAccents,\n} from \"../actions/index\";\n\nconst initialState = {\n  countries: [],\n  countriesNames: [],\n  continentsFilter: [],\n  countryDetails: {},\n  activities: [],\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload,\n        continentsFilter: action.payload,\n      };\n    case GET_COUNTRIES_BY_NAME:\n      return {\n        ...state,\n        // country: action.payload,\n        countries: action.payload,\n      };\n    case GET_COUNTRY_BY_ID:\n      return {\n        ...state,\n        countryDetails: action.payload,\n      };\n    case GET_COUNTRIES_NAMES:\n      const namesOfCountries = action.payload.map((c) => removeAccents(c.nameSearch));\n      return {\n        ...state,\n        countriesNames: namesOfCountries,\n      };\n    case ORDER_BY_NAME:\n      let orderedCountries =\n        action.payload === \"asc\"\n          ? state.countries.sort(function (a, b) {\n              if (a.name > b.name) {\n                return 1;\n              }\n              if (b.name > a.name) {\n                return -1;\n              }\n              return 0;\n            })\n          : state.countries.sort(function (a, b) {\n              if (a.name > b.name) {\n                return -1;\n              }\n              if (b.name > a.name) {\n                return 1;\n              }\n              return 0;\n            });\n      return {\n        ...state,\n        countries: orderedCountries,\n      };\n    case FILTER_BY_POPULATION:\n      let sortedByPopulation =\n        action.payload === \"less\"\n          ? state.countries.sort(function (a, b) {\n              if (a.population > b.population) {\n                return 1;\n              }\n              if (b.population > a.population) {\n                return -1;\n              }\n              return 0;\n            })\n          : state.countries.sort(function (a, b) {\n              if (a.population > b.population) {\n                return -1;\n              }\n              if (b.population > a.population) {\n                return 1;\n              }\n              return 0;\n            });\n      return {\n        ...state,\n        countries: sortedByPopulation,\n      };\n    case FILTER_BY_CONTINENT:\n      let countriesList = state.continentsFilter;\n      let filteredByContinent =\n        action.payload === \"all\"\n          ? countriesList\n          : countriesList.filter((c) => c.continent === action.payload);\n      return {\n        ...state,\n        countries: filteredByContinent,\n      };\n    case COUNTRIES_BY_ACTIVITIES:\n      const filteredBycountries = state.countries;\n      const filteredByActivities = state.activities;\n      const actFiltered = action.payload === \"all\" ? filteredBycountries : filteredByActivities.filter((c) => c.name === action.payload);\n      const actToRender = action.payload === \"all\" ? filteredBycountries : actFiltered.map((c) => c.Countries);\n      const aux = actToRender.flat();\n      console.log(actToRender);\n      return {\n        ...state,\n        countries: aux,\n      };\n      case GET_ACTIVITIES:\n        return{\n          ...state,\n          activities: action.payload,\n        }\n    case POST_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}