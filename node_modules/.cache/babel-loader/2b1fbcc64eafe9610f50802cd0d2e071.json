{"ast":null,"code":"var _jsxFileName = \"/home/laus/Documentos/Henry/Henry PT-06/Repo PI Luis Urdaneta/PI-Countries-main/client/src/components/ActivityCreationForm/ActivityCreationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { getCountriesNames, postActivities } from '../../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate(input) {\n  let error = {};\n\n  if (!input.name) {\n    error.name = \"Activity name is required\";\n  }\n\n  if (!input.duration) {\n    error.duration = \"The duration of the activity is required\";\n  }\n\n  return error;\n}\n\n;\nexport default function ActivityCreationForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const countriesNames = useSelector(state => state.countriesNames);\n  const [error, setError] = useState({\n    name: \"Activity name is required\",\n    duration: \"\"\n  });\n  const [input, setInput] = useState({\n    name: \"\",\n    difficulty: \"\",\n    duration: \"\",\n    season: \"\",\n    countriesList: []\n  });\n  useEffect(() => {\n    dispatch(getCountriesNames());\n  }, []);\n\n  function handleOnChange(e) {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setError(validate({ ...input,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ActivityCreationForm\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ActivityCreationForm, \"8k9RSEnnUrw6zz9Ck+UpFExBLGk=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = ActivityCreationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityCreationForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","useNavigate","getCountriesNames","postActivities","validate","input","error","name","duration","ActivityCreationForm","dispatch","navigate","countriesNames","state","setError","setInput","difficulty","season","countriesList","handleOnChange","e","target","value"],"sources":["/home/laus/Documentos/Henry/Henry PT-06/Repo PI Luis Urdaneta/PI-Countries-main/client/src/components/ActivityCreationForm/ActivityCreationForm.jsx"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useNavigate} from 'react-router-dom';\nimport { getCountriesNames, postActivities } from '../../actions/index';\n\n\n\nfunction validate(input){\n  let error = {};\n  if(!input.name){\n    error.name = \"Activity name is required\";\n  }\n  if(!input.duration){\n    error.duration = \"The duration of the activity is required\";\n    }\n  return error;\n};\n\n\nexport default function ActivityCreationForm() {\n\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const countriesNames = useSelector((state) => state.countriesNames);\n\n  const [error, setError] = useState({\n    name: \"Activity name is required\",\n    duration: \"\",\n  });\n\n  const [input, setInput] = useState({\n    name: \"\",\n    difficulty: \"\",\n    duration: \"\",\n    season: \"\",\n    countriesList: [],\n  });\n\n  useEffect(() => {\n    dispatch(getCountriesNames());\n  }, []);\n\n  function handleOnChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    })\n    setError(validate({\n      ...input,\n      [e.target.name]: e.target.value,\n    }))\n  };\n\n\n  return (\n    <div>ActivityCreationForm</div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAoC,kBAApC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,qBAAlD;;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;EACtB,IAAIC,KAAK,GAAG,EAAZ;;EACA,IAAG,CAACD,KAAK,CAACE,IAAV,EAAe;IACbD,KAAK,CAACC,IAAN,GAAa,2BAAb;EACD;;EACD,IAAG,CAACF,KAAK,CAACG,QAAV,EAAmB;IACjBF,KAAK,CAACE,QAAN,GAAiB,0CAAjB;EACC;;EACH,OAAOF,KAAP;AACD;;AAAA;AAGD,eAAe,SAASG,oBAAT,GAAgC;EAAA;;EAE7C,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EAEA,MAAMa,QAAQ,GAAGV,WAAW,EAA5B;EAEA,MAAMW,cAAc,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC;EAEA,MAAM,CAACN,KAAD,EAAQQ,QAAR,IAAoBjB,QAAQ,CAAC;IACjCU,IAAI,EAAE,2BAD2B;IAEjCC,QAAQ,EAAE;EAFuB,CAAD,CAAlC;EAKA,MAAM,CAACH,KAAD,EAAQU,QAAR,IAAoBlB,QAAQ,CAAC;IACjCU,IAAI,EAAE,EAD2B;IAEjCS,UAAU,EAAE,EAFqB;IAGjCR,QAAQ,EAAE,EAHuB;IAIjCS,MAAM,EAAE,EAJyB;IAKjCC,aAAa,EAAE;EALkB,CAAD,CAAlC;EAQAtB,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT;;EAIA,SAASiB,cAAT,CAAwBC,CAAxB,EAA2B;IACzBL,QAAQ,CAAC,EACP,GAAGV,KADI;MAEP,CAACe,CAAC,CAACC,MAAF,CAASd,IAAV,GAAiBa,CAAC,CAACC,MAAF,CAASC;IAFnB,CAAD,CAAR;IAIAR,QAAQ,CAACV,QAAQ,CAAC,EAChB,GAAGC,KADa;MAEhB,CAACe,CAAC,CAACC,MAAF,CAASd,IAAV,GAAiBa,CAAC,CAACC,MAAF,CAASC;IAFV,CAAD,CAAT,CAAR;EAID;;EAAA;EAGD,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;GAxCuBb,oB;UAELX,W,EAEAG,W,EAEMF,W;;;KANDU,oB"},"metadata":{},"sourceType":"module"}