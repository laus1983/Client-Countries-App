{"ast":null,"code":"import React from\"react\";import{NavLink,useParams}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{useEffect}from\"react\";import{getById}from\"../../actions/index\";import Spinner from\"../Spinner/Spinner.jsx\";import\"./CountryDetails.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function CountryDetails(){var _country$Activities,_country$Activities2;var dispatch=useDispatch();var _useParams=useParams(),id=_useParams.id;var country=useSelector(function(state){return state.countryDetails;});var language=useSelector(function(state){return state.language;});var isLoading=useSelector(function(state){return state.isLoading;});var darkMode=useSelector(function(state){return state.darkMode;});function seasonName(season){switch(season){case\"spring\":return\"Primavera\";case\"summer\":return\"Verano\";case\"autumn\":return\"Otoño\";case\"winter\":return\"Invierno\";default:break;}}function subregionName(subregion){switch(subregion){case\"Northern Africa\":return\"África del Norte\";case\"Eastern Africa\":return\"África Oriental\";case\"Caribbean\":return\"Caribe\";case\"South America\":return\"Sudamérica\";case\"Western Asia\":return\"Asia Occidental\";case\"Middle Africa\":return\"África Central\";case\"Polynesia\":return\"Polinesia\";case\"Northern Europe\":return\"Norte de Europa\";case\"South Eastern Asia\":return\"Asia Sudoriental\";case\"Southern Europe\":return\"Europa del Sur\";case\"Southern Africa\":return\"África del Sur\";case\"Southeast Europe\":return\"Sureste de Europa\";case\"Western Africa\":return\"África Occidental\";case\"null\":return\"Subregión no especificada\";case\"North America\":return\"América del Norte\";case\"Melanesia\":return\"Melanesia\";case\"Southern Asia\":return\"Asia Meridional\";case\"Central Europe\":return\"Europa Central\";case\"Eastern Asia\":return\"Asia Oriental\";case\"Western Europe\":return\"Europa Oriental\";case\"Australia and New Zealand\":return\"Australia y Nueva Zelanda\";case\"Micronesia\":return\"Micronesia\";case\"Central America\":return\"Centroamérica\";case\"Central Asia\":return\"Asia Central\";case\"Eastern Europe\":return\"Europa del Este\";default:break;}}useEffect(function(){dispatch(getById(id));},[dispatch,id]);return/*#__PURE__*/_jsx(\"div\",{className:darkMode?\"countryDetails-dark\":\"countryDetails\",children:isLoading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[country.hasOwnProperty(\"name\")?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flag-container\",children:/*#__PURE__*/_jsx(\"img\",{className:darkMode?\"flag-info-dark\":\"flag-info\",src:country.flag,alt:country.name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"country-info\",children:[/*#__PURE__*/_jsx(\"h1\",{className:darkMode?\"countries-info-labels-dark\":\"countries-info-labels\",children:country.id}),/*#__PURE__*/_jsx(\"h2\",{className:darkMode?\"countries-info-labels-dark\":\"countries-info-labels\",children:language?country.nameSpa:country.name}),/*#__PURE__*/_jsxs(\"h3\",{className:darkMode?\"countries-info-content-dark\":\"countries-info-content\",children:[/*#__PURE__*/_jsx(\"i\",{className:darkMode?\"countries-info-labels-dark\":\"countries-info-labels\",children:\"Capital: \"}),country.capital]}),/*#__PURE__*/_jsxs(\"h3\",{className:darkMode?\"countries-info-content-dark\":\"countries-info-content\",children:[/*#__PURE__*/_jsx(\"i\",{className:darkMode?\"countries-info-labels-dark\":\"countries-info-labels\",children:language?\"Subregión: \":\"Subregion: \"}),language?subregionName(country.subregion):country.subregion]}),/*#__PURE__*/_jsxs(\"h3\",{className:darkMode?\"countries-info-content-dark\":\"countries-info-content\",children:[/*#__PURE__*/_jsx(\"i\",{className:darkMode?\"countries-info-labels-dark\":\"countries-info-labels\",children:language?\"Área: \":\"Area: \"}),parseInt(country.area).toLocaleString(\"de-DE\"),\" Km2\"]}),/*#__PURE__*/_jsxs(\"h3\",{className:darkMode?\"countries-info-content-dark\":\"countries-info-content\",children:[/*#__PURE__*/_jsx(\"i\",{className:darkMode?\"countries-info-labels-dark\":\"countries-info-labels\",children:language?\"Población: \":\"Population: \"}),country.population.toLocaleString(\"de-DE\")]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"activities-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"activities-label-title\",children:/*#__PURE__*/_jsx(\"i\",{className:darkMode?\"activities-label-dark\":\"activities-label\",children:language?\"Actividades\":\"Activities: \"})}),((_country$Activities=country.Activities)===null||_country$Activities===void 0?void 0:_country$Activities.length)>0?(_country$Activities2=country.Activities)===null||_country$Activities2===void 0?void 0:_country$Activities2.map(function(act){return/*#__PURE__*/_jsxs(\"p\",{className:darkMode?\"activities-info-container-dark\":\"activities-info-container\",children:[/*#__PURE__*/_jsx(\"li\",{className:darkMode?\"actInfoLabel-1-dark\":\"actInfoLabel-1\",children:act.name}),/*#__PURE__*/_jsxs(\"li\",{className:darkMode?\"actInfoLabel-dark\":\"actInfoLabel\",children:[language?\"Temporada: \":\"Season: \",language?seasonName(act.season):act.season]}),/*#__PURE__*/_jsxs(\"li\",{className:darkMode?\"actInfoLabel-dark\":\"actInfoLabel\",children:[language?\"Duración: \":\"Duration: \",act.duration]}),/*#__PURE__*/_jsxs(\"li\",{className:darkMode?\"actInfoLabel-dark\":\"actInfoLabel\",children:[language?\"Dificultad: \":\"Difficulty: \",\" \",act.difficulty]})]},act.id);}):/*#__PURE__*/_jsx(\"h2\",{className:darkMode?\"noActivity-dark\":\"noActivity\",children:language?\"¡No tiene actividades!\":\"It has no activities!\"})]})]}):/*#__PURE__*/_jsx(\"h2\",{className:\"noActivity\",children:language?\"¡País no encontrado!\":\"¡Country not found!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"back-container\",children:/*#__PURE__*/_jsx(NavLink,{to:\"/countries\",className:\"back\",children:/*#__PURE__*/_jsx(\"button\",{className:darkMode?\"back-btn-info-dark\":\"back-btn-info\",children:language?\"⬅ Volver\":\"⬅ Go Back\"})})})]})});}","map":{"version":3,"names":["React","NavLink","useParams","useDispatch","useSelector","useEffect","getById","Spinner","CountryDetails","dispatch","id","country","state","countryDetails","language","isLoading","darkMode","seasonName","season","subregionName","subregion","hasOwnProperty","flag","name","nameSpa","capital","parseInt","area","toLocaleString","population","Activities","length","map","act","duration","difficulty"],"sources":["/home/laus/Documentos/Henry/Henry PT-06/App/client/src/components/CountryDetails/CountryDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getById } from \"../../actions/index\";\nimport Spinner from \"../Spinner/Spinner.jsx\";\nimport \"./CountryDetails.css\";\n\nexport default function CountryDetails() {\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const country = useSelector((state) => state.countryDetails);\n  const language = useSelector((state) => state.language);\n  const isLoading = useSelector((state) => state.isLoading);\n  const darkMode = useSelector((state) => state.darkMode);\n\n  function seasonName(season) {\n    switch (season) {\n      case \"spring\":\n        return \"Primavera\";\n      case \"summer\":\n        return \"Verano\";\n      case \"autumn\":\n        return \"Otoño\";\n      case \"winter\":\n        return \"Invierno\";\n      default:\n        break;\n    }\n  }\n\n  function subregionName(subregion) {\n    switch (subregion) {\n      case \"Northern Africa\":\n        return \"África del Norte\";\n      case \"Eastern Africa\":\n        return \"África Oriental\";\n      case \"Caribbean\":\n        return \"Caribe\";\n      case \"South America\":\n        return \"Sudamérica\";\n      case \"Western Asia\":\n        return \"Asia Occidental\";\n      case \"Middle Africa\":\n        return \"África Central\";\n      case \"Polynesia\":\n        return \"Polinesia\";\n      case \"Northern Europe\":\n        return \"Norte de Europa\";\n      case \"South Eastern Asia\":\n        return \"Asia Sudoriental\";\n      case \"Southern Europe\":\n        return \"Europa del Sur\";\n      case \"Southern Africa\":\n        return \"África del Sur\";\n      case \"Southeast Europe\":\n        return \"Sureste de Europa\";\n      case \"Western Africa\":\n        return \"África Occidental\";\n      case \"null\":\n        return \"Subregión no especificada\";\n      case \"North America\":\n        return \"América del Norte\";\n      case \"Melanesia\":\n        return \"Melanesia\";\n      case \"Southern Asia\":\n        return \"Asia Meridional\";\n      case \"Central Europe\":\n        return \"Europa Central\";\n      case \"Eastern Asia\":\n        return \"Asia Oriental\";\n      case \"Western Europe\":\n        return \"Europa Oriental\";\n      case \"Australia and New Zealand\":\n        return \"Australia y Nueva Zelanda\";\n      case \"Micronesia\":\n        return \"Micronesia\";\n      case \"Central America\":\n        return \"Centroamérica\";\n      case \"Central Asia\":\n        return \"Asia Central\";\n      case \"Eastern Europe\":\n        return \"Europa del Este\";\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getById(id));\n  }, [dispatch, id]);\n\n  return (\n    <div className={darkMode ? \"countryDetails-dark\" : \"countryDetails\"}>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          {country.hasOwnProperty(\"name\") ? (\n            <div>\n              <div className=\"details\">\n                <div className=\"flag-container\">\n                  <img\n                    className={darkMode ? \"flag-info-dark\" : \"flag-info\"}\n                    src={country.flag}\n                    alt={country.name}\n                  />\n                </div>\n                <div className=\"country-info\">\n                  <h1 className={darkMode ? \"countries-info-labels-dark\" : \"countries-info-labels\"}>{country.id}</h1>\n                  <h2 className={darkMode ? \"countries-info-labels-dark\" : \"countries-info-labels\"}>\n                    {language ? country.nameSpa : country.name}\n                  </h2>\n                  <h3 className={darkMode ? \"countries-info-content-dark\" : \"countries-info-content\"}>\n                    <i className={darkMode ? \"countries-info-labels-dark\" : \"countries-info-labels\"}>Capital: </i>\n                    {country.capital}\n                  </h3>\n                  <h3 className={darkMode ? \"countries-info-content-dark\" : \"countries-info-content\"}>\n                    <i className={darkMode ? \"countries-info-labels-dark\" : \"countries-info-labels\"}>\n                      {language ? \"Subregión: \" : \"Subregion: \"}\n                    </i>\n                    {language\n                      ? subregionName(country.subregion)\n                      : country.subregion}\n                  </h3>\n                  <h3 className={darkMode ? \"countries-info-content-dark\" : \"countries-info-content\"}>\n                    <i className={darkMode ? \"countries-info-labels-dark\" : \"countries-info-labels\"}>\n                      {language ? \"Área: \" : \"Area: \"}\n                    </i>\n                    {parseInt(country.area).toLocaleString(\"de-DE\")} Km2\n                  </h3>\n                  <h3 className={darkMode ? \"countries-info-content-dark\" : \"countries-info-content\"}>\n                    <i className={darkMode ? \"countries-info-labels-dark\" : \"countries-info-labels\"}>\n                      {language ? \"Población: \" : \"Population: \"}\n                    </i>\n                    {country.population.toLocaleString(\"de-DE\")}\n                  </h3>\n                </div>\n              </div>\n              <div className=\"activities-container\">\n                <h2 className=\"activities-label-title\">\n                  <i className={darkMode ? \"activities-label-dark\" : \"activities-label\"}>\n                    {language ? \"Actividades\" : \"Activities: \"}\n                  </i>\n                </h2>\n                {country.Activities?.length > 0 ? (\n                  country.Activities?.map((act) => (\n                    <p className={darkMode ? \"activities-info-container-dark\" : \"activities-info-container\"} key={act.id}>\n                      {/* <li className=\"actInfoLabel\">Id: {act.id}</li> */}\n                      <li className={darkMode ? \"actInfoLabel-1-dark\" : \"actInfoLabel-1\"}>\n                        {/* {language ? \"Actividad: \" : \"Activity: \"} */}\n                        {act.name}\n                      </li>\n                      <li className={darkMode ? \"actInfoLabel-dark\" : \"actInfoLabel\"}>\n                        {language ? \"Temporada: \" : \"Season: \"}\n                        {language ? seasonName(act.season) : act.season}\n                      </li>\n                      <li className={darkMode ? \"actInfoLabel-dark\" : \"actInfoLabel\"}>\n                        {language ? \"Duración: \" : \"Duration: \"}\n                        {act.duration}\n                      </li>\n                      <li className={darkMode ? \"actInfoLabel-dark\" : \"actInfoLabel\"}>\n                        {language ? \"Dificultad: \" : \"Difficulty: \"}{\" \"}\n                        {act.difficulty}\n                      </li>\n                    </p>\n                  ))\n                ) : (\n                  <h2 className={darkMode ? \"noActivity-dark\" : \"noActivity\"}>\n                    {language\n                      ? \"¡No tiene actividades!\"\n                      : \"It has no activities!\"}\n                  </h2>\n                )}\n              </div>\n            </div>\n          ) : (\n            <h2 className=\"noActivity\">\n              {language ? \"¡País no encontrado!\" : \"¡Country not found!\"}\n            </h2>\n          )}\n          <div className=\"back-container\">\n            <NavLink to=\"/countries\" className=\"back\">\n              <button className={darkMode ? \"back-btn-info-dark\" : \"back-btn-info\"}>\n                {language ? \"⬅ Volver\" : \"⬅ Go Back\"}\n              </button>\n            </NavLink>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}